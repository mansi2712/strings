//kmp algo to match string of alphabets
#include<iostream>
#include<bits/stdc++.h>
using namespace std;
int* computelps(string p,int* lps)
{
	int m=p.length();
	lps[0]=0;
	int i=1,j=0;
	while(i<m)
	{
		if(p[i]==p[j])
		{
			lps[i]=j+1;
			i++;
			j++;
		}
		else
		{
			if(j==0)
			{
				lps[i]=0;
				i++;
			}
			else
				j=lps[j-1];
		}
	}
	return lps;
}
int main()
{
	string t,p;
	cin>>t>>p;
	int n=t.length();
	int m=p.length();
	int* lps=new int[m];
	lps=computelps(p,lps);
	cout<<"lps is: ";
	for(int i=0;i<m;i++)
		cout<<lps[i]<<" ";
	int j=0;
	for(int i=0;i<n;)
	{
		if(t[i]==p[j])
		{
			i++;
			j++;
		}
		if(t[i]!=p[j])
		{
			if(j==0)
				i++;
			else
				j=lps[j-1];
		}
		if(j==(m-1))
		{
			cout<<endl<<"pattern occurs at "<<i-j;
			j=lps[j-1];
		}
	}
	delete[] lps;
	return 0;
}
